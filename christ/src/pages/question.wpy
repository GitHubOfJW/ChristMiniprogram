<template>
  <view class="container {{ hasMusic ? 'is_play' : '' }}">
    <cusaudio :inPage.sync="inPage"></cusaudio>
    <view class="list">
      <repeat for="{{questions}}" key="index" index="index" item="question">
        <questionitem :question.sync="question"></questionitem>
      </repeat>
    </view>

    <toast />
    <csloading />
  </view>
</template>

<script>
  import wepy from 'wepy'
  import { connect } from 'wepy-redux'
  import Panel from '@/components/panel' // alias example
  import CusAudio from '@/components/cusaudio'
  import CustomLoading from '@/components/customize/csLoading'
  import QuestionItem from '@/components/questionItem'
  import Toast from 'wepy-com-toast'
  import Request from '@/utils/request'

  @connect({
    hasMusic(state) {
      return state.musicPlayer.music_id > 0
    }
  })
  
  export default class Question extends wepy.page {
    config = {
      navigationBarTitleText: '常见问题',
      disableScroll: false,
      enablePullDownRefresh: true,
      backgroundTextStyle: 'dark'
    }

    components = {
      panel: Panel,
      panel1: Panel,
      panel2: Panel,
      cusaudio: CusAudio,
      csloading: CustomLoading,
      questionitem: QuestionItem,
      toast: Toast
    }

    data = {
      inPage: true,
      questions: [],
      page: 1,
      small: true
    }

    methods = {
      // 获取数据
      getData: () => {
        const data = {
          page: this.page
        }

        Request.request({
          url: '/mini/questions',
          method: 'GET',
          data: data,
          success: ({data}) => {
            if (data.code === 20000) {
              this.questions.splice(0, this.questions.length)
              for (let question of data.data.items) {
                this.questions.push(question)
              }
            }
          },
          fail: () => {

          },
          complete: () => {
            wepy.stopPullDownRefresh()
            this.$apply()
          }
        })
      }
    }

    computed = {
    }

    onLoad() {

    }

    onPullDownRefresh() {
      this.page = 1
      this.methods.getData()
    }

    onReachBottom() {
      this.page = this.page + 1
      this.methods.getData()
    }

    onShow() {
      wepy.startPullDownRefresh()
    }

    onHide() {
    }
  }
</script>
<style lang="less">
  .is_play {
    padding-top:110rpx;
  }
 
  .container {
    width: 100%;
    height:100%;
  }
  
  .list {
    padding-top:20rpx;
    border-radius: 3px;
    box-sizing: border-box;
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    align-items: center;
    border-radius: 4px;
  }
</style>
